generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_HOST")
}

// Enums para o model Grupo
enum CategoriaGrupo {
  HOMENS
  UNVT
  MULHERES
  MISTO
  NEW
  CASAIS
}

enum DiaSemana {
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
  DOMINGO
}

model bairros {
  id        String   @id @default(cuid())
  nome      String
  cidadeId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relação com grupos
  grupos grupo[]
}

model visitantes {
  id                    String   @id @default(cuid())
  estado                String?
  cidade                String?
  bairro                String?
  created_at            DateTime @default(now())
  como_chegou_ate_nos   String?
  como_nos_conheceu     String?
  culto                 String
  estado_civil          String
  frequenta_igreja      String?
  genero                String
  idade                 Int
  interesse_em_conhecer Json
  nome                  String
  observacao            String?
  qual_igreja           String?
  telefone              String
  mensagem_enviada      Boolean  @default(false)

  // Add relation to User
  registeredById String?
  registeredBy   users?  @relation(fields: [registeredById], references: [id])
}

model users {
  id                    String   @id @default(cuid())
  email                 String   @unique
  password              String
  name                  String
  phone                 String?
  role                  String   @default("user")
  requirePasswordChange Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Add relation to Visitantes
  registeredVisitors visitantes[]

  // Relação com grupos liderados
  gruposLiderados grupo[]

  // Relação com empresas
  empresas UserEmpresa[]
}

model grupo {
  id        String         @id @default(cuid())
  nome      String
  categoria CategoriaGrupo
  diaSemana DiaSemana
  horario   String
  bairroId  String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  // Relações
  bairro  bairros? @relation(fields: [bairroId], references: [id])
  lideres users[]
}

model Empresa {
  id              String   @id @default(cuid())
  nomeNegocio     String
  ramoAtuacao     String
  detalhesServico String   @db.Text
  whatsapp        String
  endereco        String?
  site            String?
  instagram       String?
  facebook        String?
  linkedin        String?
  email           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relação com usuários (muitos para muitos)
  usuarios UserEmpresa[]
}

model UserEmpresa {
  id        String   @id @default(cuid())
  userId    String
  empresaId String
  createdAt DateTime @default(now())

  // Relações
  user    users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)

  @@unique([userId, empresaId])
}
